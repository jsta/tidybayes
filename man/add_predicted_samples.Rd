% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_predicted_samples.R
\name{add_predicted_samples}
\alias{add_predicted_samples}
\alias{add_fitted_samples}
\alias{predicted_samples}
\alias{fitted_samples}
\alias{predicted_samples.default}
\alias{fitted_samples.default}
\alias{predicted_samples.stanreg}
\alias{fitted_samples.stanreg}
\alias{predicted_samples.brmsfit}
\alias{fitted_samples.brmsfit}
\title{Add samples from the posterior fit or posterior prediction of a model to a data frame}
\usage{
add_predicted_samples(newdata, model, var = "pred", ..., n = NULL,
  re_formula = NULL)

add_fitted_samples(newdata, model, var = "estimate", ..., n = NULL,
  re_formula = NULL, category = "category", auxpars = TRUE,
  scale = c("response", "linear"))

predicted_samples(model, newdata, var = "pred", ..., n = NULL,
  re_formula = NULL)

fitted_samples(model, newdata, var = "estimate", ..., n = NULL,
  re_formula = NULL, category = "category", auxpars = TRUE,
  scale = c("response", "linear"))

\method{predicted_samples}{default}(model, newdata, ...)

\method{fitted_samples}{default}(model, newdata, ...)

\method{predicted_samples}{stanreg}(model, newdata, var = "pred", ...,
  n = NULL, re_formula = NULL)

\method{fitted_samples}{stanreg}(model, newdata, var = "estimate", ...,
  n = NULL, re_formula = NULL, category = "category", auxpars = TRUE,
  scale = c("response", "linear"))

\method{predicted_samples}{brmsfit}(model, newdata, var = "pred", ...,
  n = NULL, re_formula = NULL)

\method{fitted_samples}{brmsfit}(model, newdata, var = "estimate", ...,
  n = NULL, re_formula = NULL, category = "category", auxpars = TRUE,
  scale = c("response", "linear"))
}
\arguments{
\item{newdata}{Data frame to generate predictions from. If omitted, most model types will
generate predictions from the data used to fit the model.}

\item{model}{A supported Bayesian model fit / MCMC object that can provide fits and predictions. Supported models
are listed in the second section of \code{\link{tidybayes-models}}: \emph{Models Supporting Prediction}. While other
functions in this package (like \code{\link{spread_samples}}) support a wider range of models, to work with
\code{add_fitted_samples} and \code{add_predicted_samples} a model must provide an interface for generating
predictions, thus more generic Bayesian modeling interfaces like \code{runjags} and \code{rstan} are not directly
supported for these functions (only wrappers around those languages that provide predictions, like \code{rstanarm}
and \code{brm}, are supported here).}

\item{var}{The name of the output column for the predictions (default \code{"pred"}) or fits
(default \code{"estimate"}, for compatibility with \code{\link[broom]{tidy}}).}

\item{...}{Additional arguments passed to the underlying prediction method for the type of
model given.}

\item{n}{The number of samples per prediction / fit to return.}

\item{re_formula}{formula containing group-level effects to be considered in the prediction.
If \code{NULL} (default), include all group-level effects; if \code{NA}, include no group-level effects.
Some model types (such as \code{\link[brms]{brm}} and \code{\link[rstanarm]{stanreg-objects}}) allow
marginalizing over grouping factors by specifying new levels of a factor in \code{newdata}. In the case of
\code{\link[brms]{brm}}, you must also pass \code{allow_new_levels = TRUE} here to include new levels (see
\code{\link[brms]{predict.brmsfit}}).}

\item{category}{For \emph{some} ordinal and multinomial models (notably, \code{\link[brms]{brm}} models but
\emph{not} \code{\link[rstanarm]{stan_polr}} models), multiple sets of rows will be returned per estimate for
\code{fitted_samples}, one for each category. The \code{category} argument specifies the name of the column
to put the category names into in the resulting data frame. The fact that multiple rows per response are
returned only for some model types reflects the fact that tidybayes takes the approach of tidying whatever
output is given to us, and the output from different modeling functions differ on this point. See
\code{vignette("tidy-brms")} and \code{vignette("tidy-rstanarm")} for examples of dealing with output
from ordinal models using both approaches.}

\item{auxpars}{For \code{fitted_samples} and \code{add_fitted_samples}: Should auxiliary
parameters be included in the output? Valid only for models that support auxiliary parameters,
(such as submodels for variance parameters as in \code{brm}). If \code{TRUE}, auxiliary
parameters are included in the output as additional columns named after each parameter
(alternative names can be provided using a list or named vector, e.g. \code{c(sigma.hat = "sigma")}
would output the \code{"sigma"} parameter from a model as a column named \code{"sigma.hat"}).
If \code{FALSE}, auxiliary parameters are not included.}

\item{scale}{Either \code{"response"} or \code{"linear"}. If \code{"response"}, results are returned
on the scale of the response variable. If \code{"linear"}, fitted values are returned on the scale of
the linear predictor.}
}
\value{
A data frame (actually, a \code{\link[tibble]{tibble}}) with a \code{.row} column (a
factor grouping rows from the input \code{newdata}), \code{.chain} column (the chain
each sample came from, or \code{NA} if the model does not provide chain information),
\code{.iteration} column (the iteration the sample came from), and \code{.pred} column (a
sample from the posterior predictive distribution). For convenience, the resulting data
frame comes grouped by the original input rows.
}
\description{
Given a data frame and a model, adds samples from the posterior fit (aka the linear/link-level predictor)
or the posterior predictions of the model to the data frame in a long format.
}
\details{
\code{add_fitted_samples} adds samples from the posterior linear predictor (or the "link") to
the data. It corresponds to \code{\link[rstanarm]{posterior_linpred}} in \code{rstanarm} or
\code{\link[brms]{fitted.brmsfit}} in \code{brms}.

\code{add_predicted_samples} adds samples from the posterior prediction to
the data. It corresponds to \code{\link[rstanarm]{posterior_predict}} in \code{rstanarm} or
\code{\link[brms]{predict.brmsfit}} in \code{brms}.

\code{add_fitted_samples} and \code{fitted_samples} are alternate spellings of the
same function with opposite order of the first two arguments to facilitate use in data
processing pipelines that start either with a data frame or a model. Similarly,
\code{add_predicted_samples} and \code{predicted_samples} are alternate spellings.

Given equal choice between the two, \code{add_fitted_samples} and \code{add_predicted_samples}
are the preferred spellings.
}
\examples{
\donttest{

library(ggplot2)
library(dplyr)
library(rstanarm)
library(modelr)

theme_set(theme_light())

m_mpg = stan_glm(mpg ~ hp * cyl, data = mtcars,
  # 1 chain / few iterations just so example runs quickly
  # do not use in practice
  chains = 1, iter = 500)

# sample 100 fit lines from the posterior and overplot them
mtcars \%>\%
  group_by(cyl) \%>\%
  data_grid(hp = seq_range(hp, n = 101)) \%>\%
  add_fitted_samples(m_mpg, n = 100) \%>\%
  ggplot(aes(x = hp, y = mpg, color = ordered(cyl))) +
  geom_line(aes(y = estimate, group = paste(cyl, .iteration)), alpha = 0.25) +
  geom_point(data = mtcars)

# plot posterior predictive intervals
mtcars \%>\%
  group_by(cyl) \%>\%
  data_grid(hp = seq_range(hp, n = 101)) \%>\%
  add_predicted_samples(m_mpg) \%>\%
  ggplot(aes(x = hp, y = mpg, color = ordered(cyl))) +
  stat_lineribbon(aes(y = pred), .prob = c(.99, .95, .8, .5), alpha = 0.25) +
  geom_point(data = mtcars) +
  scale_fill_brewer(palette = "Greys")

}
}
\seealso{
\code{\link{spread_samples}}
}
\author{
Matthew Kay
}
\keyword{manip}
