% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict_curve.R
\name{density_bins}
\alias{density_bins}
\alias{histogram_bins}
\title{Density bins as data frames suitable for use with predict_curve}
\usage{
density_bins(x, n = 101, ...)

histogram_bins(x, n = 30, breaks = n, ...)
}
\arguments{
\item{x}{A numeric vector}

\item{n}{Number of bins}

\item{...}{Additional arguments passed to \code{\link{density}} or
\code{\link{hist}}.}

\item{breaks}{Used to set bins for \code{histogram_bins}. Can be number of bins (by default it is set to the value
of \code{n}) or a method for setting bins. See the \code{breaks} parameter of \code{\link{hist}}.}
}
\value{
A data frame representing bins and their densities with the
following columns: \item{mid}{Bin midpoint} \item{lower}{Lower endpoint of
each bin} \item{upper}{Upper endpoint of each bin} \item{density}{Density
estimate of the bin}
}
\description{
Generates a data frame of bins representing the kernel density (or
histogram) of a vector, suitable for use in generating predictive
distributions using predict_curve.
}
\details{
These functions are simple wrappers to \code{\link{density}} and
\code{\link{hist}} that compute density estimates and return their results
in a consistent format: a data frame of bins suitable for use with
\code{\link{predict_curve}}.

\code{density_bins} computes a kernel density estimate using
\code{\link{density}}.

\code{histogram_bins} computes a density histogram using \code{\link{hist}}.
}
\examples{
\donttest{

library(ggplot2)
library(dplyr)
library(rstanarm)
library(modelr)

theme_set(theme_light())

m_mpg = stan_glm(mpg ~ hp * cyl, data = mtcars,
  # 1 chain / few iterations just so example runs quickly
  # do not use in practice
  chains = 1, iter = 500)

step = 1
mtcars \%>\%
  group_by(cyl) \%>\%
  data_grid(hp = seq_range(hp, by = step)) \%>\%
  add_predicted_samples(m_mpg) \%>\%
  do(density_bins(.$pred)) \%>\%
  ggplot() +
  geom_rect(aes(
    xmin = hp - step/2, ymin = lower, ymax = upper, xmax = hp + step/2,
    fill = ordered(cyl), alpha = density
  )) +
  geom_point(aes(x = hp, y = mpg, color = ordered(cyl)), data = mtcars) +
  scale_alpha_continuous(range = c(0, 0.75))

}
}
\seealso{
See \code{\link{add_predicted_samples}} and \code{\link{stat_lineribbon}} for a better approach. This
function may be deprecated in the future.
}
\author{
Matthew Kay
}
\keyword{manip}
